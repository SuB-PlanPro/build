pipeline {
    agent {
        kubernetes {
            yamlFile 'ci/kubernetes.yaml'
        }
    }
    options {
        timeout(time: 5, unit: 'MINUTES')
        buildDiscarder(logRotator(numToKeepStr: '3'))
    }
    stages {
        stage('Build') {
            steps {
                container('jnlp') {
                    sh 'wget -O utils/DEPENDENCIES.set https://ci.eclipse.org/set/job/SET/job/feature%252Fdash-license/lastSuccessfulBuild/artifact/DEPENDENCIES || true'
                    sh 'wget -O utils/DEPENDENCIES.browser https://ci.eclipse.org/set/job/browser/job/feature%252Fdash-license/lastSuccessfulBuild/artifact/DEPENDENCIES || true'
                    sh 'wget -O utils/DEPENDENCIES.model https://ci.eclipse.org/set/job/Model/job/feature%252Fdash-license/lastSuccessfulBuild/artifact/DEPENDENCIES || true'
                    sh 'wget -O utils/DEPENDENCIES.toolboxmodel https://ci.eclipse.org/set/job/toolboxmodel/job/feature%252Fdash-license/lastSuccessfulBuild/artifact/DEPENDENCIES || true'  
                }
            }
        }
        stage('Deploy Snapshot')
        {
            steps {
                container('jnlp') {
                    sshagent (['projects-storage.eclipse.org-bot-ssh']) {
                        sh "ssh -o BatchMode=yes genie.set@projects-storage.eclipse.org rm -rf /home/data/httpd/download.eclipse.org/set/snapshots/build-utils/"
                        sh "ssh -o BatchMode=yes genie.set@projects-storage.eclipse.org mkdir -p /home/data/httpd/download.eclipse.org/set/snapshots/build-utils/"
                        sh "scp -o BatchMode=yes -r utils/* genie.set@projects-storage.eclipse.org:/home/data/httpd/download.eclipse.org/set/snapshots/build-utils/"
                    }
                }
            }
        }
    }
}